Thanks for purchasing this pakage.

2017 update:
1. Unity is deprecating ALL Legacy particles, so I have removed a few items that they not supporting going forward.
When this package received a contents update, I will add a few partickles using the new system.
2. Unity informed publishers to remove ALL .js contents for packages to still be available.
For that reason I removed the Standard Assets Character Controller.

NB!!! With the next update I am going to give everyone WAY higher resolution PBR art as a FREE Update :)


 
The scene that was used for the online screenshots is included in this package.
You will need to import a Character controller of your choice.


There are two custom scripts that are being used to achieve the desired effects on the pre-fabs.
MaterialAlphaPulse & ObjectConstantRotation


MaterialAlphaPulse is used to generate the pulsating glyphs.
Particles/Additive shaders needs to be used with this script.
What the script also does, it on runtime creates another instance of the material so that when the user edited the colour,
it does not change the base material.



Using MaterialAlphaPulse script:
Drag script onto item.
size - add the amount of children the item would have that this might be applied to.
Example is the animated obilisk that has 4 children pulsating surfaces underneath it
If only itself then type 1
Drag each of the children or iteself onto the Element lines
Colour_pick your desired hue and saturation
Adjust Change_speed and Max_alpha's to adjust the colour result

NB!!!, in the editor the colour keeps displaying as white, this changes to the picked colour at run-time



Using ObjectConstantRotation script:
Drag script onto item.
size - add the amount of children the item would have that this might be applied to.
Example is the animated obilisk that has 4 children pulsating surfaces underneath it
If only itself then type 1
Drag each of the children or iteself onto the Element lines
Adjust the axis of rotation and the speed
positive numbers = clockwise rotation
negative numbers = anti-clockwise



Using Teleport script:
For the teleport script you need a trigger collider and you need an exit/destination object.

1. For the Trigger:
Create an empty game object and position just above the middel of the Portal's top surface.
Add a collider sphere to this empty game object.
Drag Teleport script to this trigger object.

2. For the Exit/destination:
Creat an empty game object and position say 1,9 units above the destination object of choice.

3. Go back to the Trigger and look at the script.
Drag the exit object from the Hierarchy view to the exit object on the script.

Pack your bags and get ready to travel, click play and with your first person controller you can go from one to the other spot

Tip:
When you want to travel back from the Exit/destination to the original Trigger, you will need to set the same up from the other side.
Just make sure your exit that you are going to create is not exactly above the orginal Trigger collider, otherwise you are going to have an infinate loop of traveling back and forth.
Place it slightly to one side or maybe make a simple generic distination Portal design that only acts as distinations, never as trigger designs.


Send some screenshots to info@3dforge.co.za of your work and I will showcase them on the website

Enjoy